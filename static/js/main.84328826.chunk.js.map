{"version":3,"sources":["components/layout/Header.jsx","components/pages/About.jsx","components/pages/NotFound.jsx","providers/Context.jsx","components/layout/TextInputGroup.jsx","components/contacts/AddContact.jsx","components/contacts/EditContact.jsx","components/contacts/Contact.jsx","components/contacts/Contacts.jsx","components/test/Test.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","react_default","a","createElement","className","href","Link","to","defaultProps","About","NotFound","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","children","Component","Consumer","TextInputGroup","_ref","label","name","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","addContact","email","phone","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this2","_this$state2","style","cursor","onClick","float","color","bind","layout_TextInputGroup","EditContact","updContact","match","params","put","Contact","showContactInfo","onDeleteClick","delete","t0","_this$props$contact","marginRight","Contacts","deleteContact","newContacts","Fragment","contacts_Contact","Test","title","body","fetch","then","response","json","App","Context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iQAIMA,EAAS,SAAAC,GAAS,IACdC,EAAaD,EAAbC,SACR,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4DACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,IAAID,UAAU,gBACpBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAAb,IAAqCJ,EAArC,MAEFC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,IAAIH,UAAU,YACrBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,WAEFH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,eAAeH,UAAU,YAChCH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,gBAEFH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,SAASH,UAAU,YAC1BH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAAb,kBAUhBN,EAAOU,aAAe,CACpBR,SAAU,UAOGF,QCtCAW,EAAA,WACb,OACER,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,uBACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,sCACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,qBCLSM,EAAA,WACb,OACET,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,mCACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,6GCHAO,EAAUC,IAAMC,gBAEhBC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASC,OACvB,SAAAC,GAAO,OAAIA,EAAQC,KAAOP,EAAOQ,YAGvC,IAAK,cACH,OAAON,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAQ,CAAGJ,EAAOQ,SAAVC,OAAAP,OAAAQ,EAAA,EAAAR,CAAsBH,EAAMK,aAExC,IAAK,iBACH,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASO,IACvB,SAAAL,GAAO,OACLA,EAAQC,KAAOP,EAAOQ,QAAQD,GACzBD,EAAUN,EAAOQ,QAClBF,MAGZ,QACE,OAAOP,IAIAa,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAb,OAAAc,EAAA,EAAAd,CAAAe,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAb,OAAAsB,EAAA,EAAAtB,CAAAe,MAAAH,EAAAZ,OAAAuB,EAAA,EAAAvB,CAAAU,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAR,OAAAY,MACEtB,MAAQ,CACNK,SAAU,GACVwB,SAAU,SAAA5B,GAAM,OAAIe,EAAKc,SAAS,SAAA9B,GAAK,OAAID,EAAQC,EAAOC,OAH9De,EAAA,OAAAb,OAAA4B,EAAA,EAAA5B,CAAAU,EAAAC,GAAAX,OAAA6B,EAAA,EAAA7B,CAAAU,EAAA,EAAAoB,IAAA,oBAAAC,MAAA,eAAAC,EAAAhC,OAAAiC,EAAA,EAAAjC,CAAAkC,EAAAlD,EAAAmD,KAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAlD,EAAAsD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAQsBC,IAAMC,IAAI,8CARhC,OAQUN,EARVE,EAAAK,KASI7B,KAAKY,SAAS,CAAEzB,SAAUmC,EAAIQ,OATlC,wBAAAN,EAAAO,SAAAV,EAAArB,SAAA,yBAAAiB,EAAAP,MAAAV,KAAAE,YAAA,KAAAa,IAAA,SAAAC,MAAA,WAaI,OACEhD,EAAAC,EAAAC,cAACQ,EAAQiB,SAAT,CAAkBqB,MAAOhB,KAAKlB,OAC3BkB,KAAKlC,MAAMkE,cAfpBrC,EAAA,CAA8BsC,aAoBjBC,EAAWxD,EAAQwD,0BClD1BC,EAAiB,SAAAC,GAQjB,IAPJC,EAOID,EAPJC,MACAC,EAMIF,EANJE,KACAtB,EAKIoB,EALJpB,MACAuB,EAIIH,EAJJG,YACAvD,EAGIoD,EAHJpD,KACAwD,EAEIJ,EAFJI,SACAC,EACIL,EADJK,MAEA,OACEzE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOwE,QAAQ,UAAUL,GACzBrE,EAAAC,EAAAC,cAAA,SACEc,KAAMA,EACNsD,KAAMA,EACNnE,UAAWwE,IAAW,+BAAgC,CACpDC,aAAcH,IAEhBF,YAAaA,EACbvB,MAAOA,EACPwB,SAAUA,IAEXC,GACCzE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAf,oCAgBRgE,EAAe5D,aAAe,CAC5BS,KAAM,QAGOmD,QCqFAU,6MA7Hb/D,MAAQ,CACNgE,YAAY,EACZR,KAAM,GACNS,MAAO,GACPC,MAAO,GACPC,OAAQ,MAGVT,SAAW,SAAAU,GAAC,OAAIpD,EAAKc,SAAL3B,OAAAkE,EAAA,EAAAlE,CAAA,GAAiBiE,EAAEE,OAAOd,KAAOY,EAAEE,OAAOpC,WAE1DqC,+CAAW,SAAAhC,EAAOV,EAAUuC,GAAjB,IAAAI,EAAAhB,EAAAS,EAAAC,EAAAO,EAAAjC,EAAA,OAAAH,EAAAlD,EAAAsD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACTwB,EAAEM,iBADOF,EAEsBxD,EAAKhB,MAA5BwD,EAFCgB,EAEDhB,KAAMS,EAFLO,EAEKP,MAAOC,EAFZM,EAEYN,MAGR,KAATV,EALK,CAAAd,EAAAE,KAAA,eAMP5B,EAAKc,SAAS,CAAEqC,OAAQ,CAAEX,KAAM,8BANzBd,EAAAiC,OAAA,oBASK,KAAVT,EATK,CAAAxB,EAAAE,KAAA,eAUP5B,EAAKc,SAAS,CAAEqC,OAAQ,CAAED,MAAO,kCAV1BxB,EAAAiC,OAAA,oBAaK,KAAVV,EAbK,CAAAvB,EAAAE,KAAA,gBAcP5B,EAAKc,SAAS,CAAEqC,OAAQ,CAAEF,MAAO,+BAd1BvB,EAAAiC,OAAA,yBAmBHF,EAAa,CACjBjB,OACAS,QACAC,SAtBOxB,EAAAE,KAAA,GA0BSC,IAAM+B,KACtB,6CACAH,GA5BO,QA0BHjC,EA1BGE,EAAAK,KA+BTlB,EAAS,CAAE3B,KAAM,cAAeO,QAAS+B,EAAIQ,OAG7ChC,EAAKc,SAAS,CACZ0B,KAAM,GACNS,MAAO,GACPC,MAAO,GACPC,OAAQ,KAGVnD,EAAKhC,MAAM6F,QAAQC,KAAK,KAzCf,yBAAApC,EAAAO,SAAAV,EAAArB,yIA4CF,IAAA6D,EAAA7D,KAAA8D,EACgC9D,KAAKlB,MAApCwD,EADDwB,EACCxB,KAAMS,EADPe,EACOf,MAAOC,EADdc,EACcd,MAAOC,EADrBa,EACqBb,OAE5B,OACEjF,EAAAC,EAAAC,cAACgE,EAAD,KACG,SAAAlB,GAAS,IACAL,EAAaK,EAAbL,SAER,OACE3C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OACEC,UAAU,cACV4F,MAAO,CAAEC,OAAQ,WACjBC,QAAS,kBACPJ,EAAKjD,SAAS,CACZkC,YAAae,EAAK/E,MAAMgE,eAI5B9E,EAAAC,EAAAC,cAAA,KACEC,UAAU,sBACV4F,MAAO,CACLC,OAAQ,UACRE,MAAO,OACPC,MAAO,aAER,IAhBL,eAmBAnG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAMmF,SAAUQ,EAAKR,SAASe,KAAKP,EAAMlD,IACvC3C,EAAAC,EAAAC,cAACmG,EAAD,CACEhC,MAAM,OACNC,KAAK,OACLC,YAAY,oBACZvB,MAAOsB,EACPE,SAAUqB,EAAKrB,SACfC,MAAOQ,EAAOX,OAEhBtE,EAAAC,EAAAC,cAACmG,EAAD,CACEhC,MAAM,WACNC,KAAK,QACLC,YAAY,wBACZvB,MAAOgC,EACPR,SAAUqB,EAAKrB,SACfC,MAAOQ,EAAOD,QAEhBhF,EAAAC,EAAAC,cAACmG,EAAD,CACEhC,MAAM,QACNC,KAAK,QACLtD,KAAK,QACLuD,YAAY,qBACZvB,MAAO+B,EACPP,SAAUqB,EAAKrB,SACfC,MAAOQ,EAAOF,QAEhB/E,EAAAC,EAAAC,cAAA,SACEc,KAAK,SACLgC,MAAM,cACN7C,UAAU,wCAlHL8D,aC2IVqC,6MA1IbxF,MAAQ,CACNgE,YAAY,EACZR,KAAM,GACNS,MAAO,GACPC,MAAO,GACPC,OAAQ,MAgBVT,SAAW,SAAAU,GAAC,OAAIpD,EAAKc,SAAL3B,OAAAkE,EAAA,EAAAlE,CAAA,GAAiBiE,EAAEE,OAAOd,KAAOY,EAAEE,OAAOpC,WAE1DqC,+CAAW,SAAAhC,EAAOV,EAAUuC,GAAjB,IAAAI,EAAAhB,EAAAS,EAAAC,EAAAuB,EAAAjF,EAAAgC,EAAA,OAAAH,EAAAlD,EAAAsD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACTwB,EAAEM,iBADOF,EAEsBxD,EAAKhB,MAA5BwD,EAFCgB,EAEDhB,KAAMS,EAFLO,EAEKP,MAAOC,EAFZM,EAEYN,MAGR,KAATV,EALK,CAAAd,EAAAE,KAAA,eAMP5B,EAAKc,SAAS,CAAEqC,OAAQ,CAAEX,KAAM,8BANzBd,EAAAiC,OAAA,oBASK,KAAVT,EATK,CAAAxB,EAAAE,KAAA,eAUP5B,EAAKc,SAAS,CAAEqC,OAAQ,CAAED,MAAO,kCAV1BxB,EAAAiC,OAAA,oBAaK,KAAVV,EAbK,CAAAvB,EAAAE,KAAA,gBAcP5B,EAAKc,SAAS,CAAEqC,OAAQ,CAAEF,MAAO,+BAd1BvB,EAAAiC,OAAA,yBAkBHc,EAAa,CACjBjC,OACAS,QACAC,SAGM1D,EAAOQ,EAAKhC,MAAM0G,MAAMC,OAAxBnF,GAxBCkC,EAAAE,KAAA,GA0BSC,IAAM+C,IAAN,8CAAAlF,OAC8BF,GAC9CiF,GA5BO,QA0BHjD,EA1BGE,EAAAK,KA+BTlB,EAAS,CAAE3B,KAAM,iBAAkBO,QAAS+B,EAAIQ,OAGhDhC,EAAKc,SAAS,CACZ0B,KAAM,GACNS,MAAO,GACPC,MAAO,GACPC,OAAQ,KAGVnD,EAAKhC,MAAM6F,QAAQC,KAAK,KAzCf,yBAAApC,EAAAO,SAAAV,EAAArB,6QAdDV,EAAOU,KAAKlC,MAAM0G,MAAMC,OAAxBnF,YACUqC,IAAMC,IAAN,8CAAApC,OAC8BF,WAD1CgC,SAGAjC,EAAUiC,EAAIQ,KACpB9B,KAAKY,SAAS,CACZ0B,KAAMjD,EAAQiD,KACdS,MAAO1D,EAAQ0D,MACfC,MAAO3D,EAAQ2D,2IAkDV,IAAAa,EAAA7D,KAAA8D,EACgC9D,KAAKlB,MAApCwD,EADDwB,EACCxB,KAAMS,EADPe,EACOf,MAAOC,EADdc,EACcd,MAAOC,EADrBa,EACqBb,OAE5B,OACEjF,EAAAC,EAAAC,cAACgE,EAAD,KACG,SAAAlB,GAAS,IACAL,EAAaK,EAAbL,SAER,OACE3C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OACEC,UAAU,cACV4F,MAAO,CAAEC,OAAQ,WACjBC,QAAS,kBACPJ,EAAKjD,SAAS,CACZkC,YAAae,EAAK/E,MAAMgE,eAI5B9E,EAAAC,EAAAC,cAAA,KACEC,UAAU,sBACV4F,MAAO,CACLC,OAAQ,UACRE,MAAO,OACPC,MAAO,aAER,IAhBL,gBAmBAnG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAMmF,SAAUQ,EAAKR,SAASe,KAAKP,EAAMlD,IACvC3C,EAAAC,EAAAC,cAACmG,EAAD,CACEhC,MAAM,OACNC,KAAK,OACLC,YAAY,oBACZvB,MAAOsB,EACPE,SAAUqB,EAAKrB,SACfC,MAAOQ,EAAOX,OAEhBtE,EAAAC,EAAAC,cAACmG,EAAD,CACEhC,MAAM,WACNC,KAAK,QACLC,YAAY,wBACZvB,MAAOgC,EACPR,SAAUqB,EAAKrB,SACfC,MAAOQ,EAAOD,QAEhBhF,EAAAC,EAAAC,cAACmG,EAAD,CACEhC,MAAM,QACNC,KAAK,QACLtD,KAAK,QACLuD,YAAY,qBACZvB,MAAO+B,EACPP,SAAUqB,EAAKrB,SACfC,MAAOQ,EAAOF,QAEhB/E,EAAAC,EAAAC,cAAA,SACEc,KAAK,SACLgC,MAAM,iBACN7C,UAAU,wCA/HJ8D,aC4EX0C,6MA3Eb7F,MAAQ,CACN8F,iBAAiB,KAGnBC,oDAAgB,SAAAxD,EAAO/B,EAAIqB,GAAX,OAAAQ,EAAAlD,EAAAsD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAINC,IAAMmD,OAAN,8CAAAtF,OAA2DF,IAJrD,OAMZqB,EAAS,CAAE3B,KAAM,iBAAkBO,QAASD,IANhCkC,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAuD,GAAAvD,EAAA,SAQZb,EAAS,CAAE3B,KAAM,iBAAkBO,QAASD,IARhC,wBAAAkC,EAAAO,SAAAV,EAAArB,KAAA,4IAYP,IAAA6D,EAAA7D,KAAAgF,EAC4BhF,KAAKlC,MAAMuB,QAAtCC,EADD0F,EACC1F,GAAIgD,EADL0C,EACK1C,KAAMS,EADXiC,EACWjC,MAAOC,EADlBgC,EACkBhC,MACjB4B,EAAoB5E,KAAKlB,MAAzB8F,gBAER,OACE5G,EAAAC,EAAAC,cAACgE,EAAD,KACG,SAAAlB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACE3C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,UACGoE,EAAM,IACPtE,EAAAC,EAAAC,cAAA,KACEC,UAAU,mBACV4F,MAAO,CAAEC,OAAQ,WACjBC,QAAS,kBACPJ,EAAKjD,SAAS,CACZgE,iBAAkBf,EAAK/E,MAAM8F,qBAInC5G,EAAAC,EAAAC,cAAA,KACEC,UAAU,eAEV4F,MAAO,CAAEC,OAAQ,UAAWE,MAAO,QAASC,MAAO,OACnDF,QAASJ,EAAKgB,cAAcT,KAAKP,EAAMvE,EAAIqB,KAE7C3C,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAE,iBAAAkB,OAAmBF,IACzBtB,EAAAC,EAAAC,cAAA,KACEC,UAAU,mBACV4F,MAAO,CACLC,OAAQ,UACRE,MAAO,QACPC,MAAO,OACPc,YAAa,YAKpBL,EACC5G,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,UAAwC4E,GACxC/E,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,UAAwC6E,IAExC,gBA9DEf,aC4BPiD,6MA5BbC,cAAgB,SAAA7F,GAAM,IAEd8F,EADetF,EAAKhB,MAAlBK,SACqBC,OAAO,SAAAC,GAAO,OAAIA,EAAQC,KAAOA,IAC9DQ,EAAKc,SAAS,CAAEzB,SAAUiG,6EAI1B,OACEpH,EAAAC,EAAAC,cAACgE,EAAD,KACG,SAAAlB,GAAS,IACA7B,EAAa6B,EAAb7B,SACR,OACEnB,EAAAC,EAAAC,cAACF,EAAAC,EAAMoH,SAAP,KACErH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBACZH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAhB,WADF,SAICgB,EAASO,IAAI,SAAAL,GAAO,OACnBrB,EAAAC,EAAAC,cAACoH,EAAD,CAASvE,IAAK1B,EAAQC,GAAID,QAASA,gBAnB5B4C,aCHFsD,6MACnBzG,MAAQ,CACN0G,MAAO,GACPC,KAAM,uFAGY,IAAA5B,EAAA7D,KAClB0F,MAAM,gDACHC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAA7D,GAAI,OACR+B,EAAKjD,SAAS,CACZ4E,MAAO1D,EAAK0D,MACZC,KAAM3D,EAAK2D,0CAKV,IAAAnC,EACiBtD,KAAKlB,MAArB0G,EADDlC,EACCkC,MAAOC,EADRnC,EACQmC,KACf,OACEzH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKsH,GACLxH,EAAAC,EAAAC,cAAA,SAAIuH,WAtBsBxD,aCuCnB6D,gMAtBX,OACE9H,EAAAC,EAAAC,cAAC6H,EAAD,KACE/H,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,KACEhI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC+H,EAAD,CAAQlI,SAAS,kBACjBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACgI,EAAA,EAAD,KACElI,EAAAC,EAAAC,cAACiI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWpB,IACjClH,EAAAC,EAAAC,cAACiI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,UAAWzD,IAC5C7E,EAAAC,EAAAC,cAACiI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,UAAWhC,IACjDtG,EAAAC,EAAAC,cAACiI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAW9H,IACtCR,EAAAC,EAAAC,cAACiI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAWf,IACrCvH,EAAAC,EAAAC,cAACiI,EAAA,EAAD,CAAOG,UAAW7H,gBAdhBwD,cCPEsE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASlC,MACvB,2DCXNmC,IAASC,OAAO5I,EAAAC,EAAAC,cAAC2I,EAAD,MAASC,SAASC,eAAe,SDoH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvB,KAAK,SAAAwB,GACjCA,EAAaC","file":"static/js/main.84328826.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          <i className=\"far fa-address-book\"> {branding} </i>\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\"> Home </i>\n              </Link>\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\"> Adicionar </i>\n              </Link>\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\"> Sobre </i>\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: \"My App\"\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">Sobre Meus Contatos</h1>\n      <p className=\"lead\">Um simples gerenciador de contatos</p>\n      <p className=\"text-secondary\">Versão 1.0.0</p>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">404 Página Não Encontrada</h1>\n      <p className=\"lead\">Desculpe, essa página não existe</p>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(\n          contact =>\n            contact.id === action.payload.id\n              ? (contact = action.payload)\n              : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  async componentDidMount() {\n    // await - keyword for handle assincronous / promises responses\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n    this.setState({ contacts: res.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\nexport const Consumer = Context.Consumer;\n","import React from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor=\"{name}\">{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && (\n        <div className=\"invalid-feedback\">Esse campo é obrigatório</div>\n      )}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string.isRequired\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\"\n};\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../providers/Context\";\n// import uuid from \"uuid\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass AddContact extends Component {\n  state = {\n    addContact: false,\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    // Check for errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name é obrigatório\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Telefone é obrigatório\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email é obrigatório\" } });\n      return;\n    }\n\n    // Create Contact object\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n    // call Context API Add Contact action\n    //dispatch({ type: \"ADD_CONTACT\", payload: newContact });\n    const res = await axios.post(\n      \"https://jsonplaceholder.typicode.com/users\",\n      newContact\n    );\n\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\n\n    // Clear Form Fields\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n    //redirect to the home page with the new contact\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n\n          return (\n            <div className=\"card mb-3\">\n              <div\n                className=\"card-header\"\n                style={{ cursor: \"pointer\" }}\n                onClick={() =>\n                  this.setState({\n                    addContact: !this.state.addContact\n                  })\n                }\n              >\n                <i\n                  className=\"fas fa-address-card\"\n                  style={{\n                    cursor: \"pointer\",\n                    float: \"left\",\n                    color: \"#076BFF\"\n                  }}\n                />{\" \"}\n                Add Contact\n              </div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Nome\"\n                    name=\"name\"\n                    placeholder=\"Insira o nome... \"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Telefone\"\n                    name=\"phone\"\n                    placeholder=\"Insira o Telefone... \"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Insira o email... \"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../providers/Context\";\n// import uuid from \"uuid\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass EditContact extends Component {\n  state = {\n    addContact: false,\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n    const contact = res.data;\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    // Check for errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name é obrigatório\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Telefone é obrigatório\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email é obrigatório\" } });\n      return;\n    }\n\n    const updContact = {\n      name,\n      email,\n      phone\n    };\n\n    const { id } = this.props.match.params;\n\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    );\n\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\n\n    // Clear Form Fields\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n    //redirect to the home page with the new contact\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n\n          return (\n            <div className=\"card mb-3\">\n              <div\n                className=\"card-header\"\n                style={{ cursor: \"pointer\" }}\n                onClick={() =>\n                  this.setState({\n                    addContact: !this.state.addContact\n                  })\n                }\n              >\n                <i\n                  className=\"fas fa-address-card\"\n                  style={{\n                    cursor: \"pointer\",\n                    float: \"left\",\n                    color: \"#076BFF\"\n                  }}\n                />{\" \"}\n                Edit Contact\n              </div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Nome\"\n                    name=\"name\"\n                    placeholder=\"Insira o nome... \"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Telefone\"\n                    name=\"phone\"\n                    placeholder=\"Insira o Telefone... \"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Insira o email... \"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React, { Component } from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport { Consumer } from \"../../providers/Context\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    // try-catch gambiarra\n    try {\n      //send delete call\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      // refresh deleted contact call\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    } catch (e) {\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    }\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"container\">\n              <div className=\"card card-body mb-3\">\n                <h4>\n                  {name}{\" \"}\n                  <i\n                    className=\"fas fa-sort-down\"\n                    style={{ cursor: \"pointer\" }}\n                    onClick={() =>\n                      this.setState({\n                        showContactInfo: !this.state.showContactInfo\n                      })\n                    }\n                  />\n                  <i\n                    className=\"fas fa-times\"\n                    /* cursor:'pointer' indica o comportamento do cursor, usabilidade para representar um objeto clicável */\n                    style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                    onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                  />\n                  <Link to={`/contact/edit/${id}`}>\n                    <i\n                      className=\"fas fa-user-edit\"\n                      style={{\n                        cursor: \"pointer\",\n                        float: \"right\",\n                        color: \"blue\",\n                        marginRight: \"1rem\"\n                      }}\n                    />\n                  </Link>\n                </h4>\n                {showContactInfo ? (\n                  <ul className=\"list-group\">\n                    <li className=\"list-group-item\">Email: {email}</li>\n                    <li className=\"list-group-item\">Phone: {phone}</li>\n                  </ul>\n                ) : null}\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from \"react\";\n\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../providers/Context\";\n\nclass Contacts extends Component {\n  deleteContact = id => {\n    const { contacts } = this.state;\n    const newContacts = contacts.filter(contact => contact.id !== id);\n    this.setState({ contacts: newContacts });\n  };\n\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-primary\">Contact</span> List\n              </h1>\n\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React, { Component } from \"react\";\n\nexport default class Test extends Component {\n  state = {\n    title: \"\",\n    body: \"\"\n  };\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          title: data.title,\n          body: data.body\n        })\n      );\n  }\n\n  render() {\n    const { title, body } = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    );\n  }\n}\n\n// componentDidMount() {\n//   // used for HTTP Calls\n//   console.log(\"Component Did Mount...\");\n// }\n\n// componentWillMount() {\n//   console.log(\"Component Will Mount...\");\n// }\n\n// componentDidUpdate() {\n//   // Change of States\n//   console.log(\"Component Did Update...\");\n// }\n\n// componentWillUpdate() {\n//   // Change of States\n//   console.log(\"Component Will Update...\");\n// }\n\n// componentWillReceiveProps(nextProps, nextState) {\n//   // Redux takes states and asssign as props\n//   console.log(\"Component Will Receive Props...\");\n// }\n\n// static getDerivedStateFromProps(nextProps, prevState) {\n//   return { test: \"something\" };\n// }\n\n// getSnapshotBeforeUpdate(prevProps, prevState) {\n//   console.log(\"get SnapshotBeforeUpdate...\");\n//   return;\n// }\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\n\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport Test from \"./components/test/Test\";\n\nimport { Provider } from \"./providers/Context\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Meus Contatos\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}